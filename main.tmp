# import os
# import shutil
# 
# from vidgear.gears import CamGear
# from vidgear.gears import StreamGear
# from http.server import BaseHTTPRequestHandler, HTTPServer
# import re

import requests
#
# class handler(BaseHTTPRequestHandler):
#
#     tmp: str
#
#     def VideoStream(self):
#         # open any valid video stream(from web-camera attached at index `0`)
#         print(self.path)
#         stream = CamGear(f"http://romaxa55.otttv.pw{self.path}").start()
#         s_new = self.path.split("/")
#         self.tmp = f"tmp/{s_new[2]}_{s_new[3]}"
#         if not os.path.exists(self.tmp):
#             os.mkdir(self.tmp)
#         stream_params = {"-input_framerate": stream.framerate, "-livestream": True}
#         streamer = StreamGear(output=f"{self.tmp}/hls_out.m3u8", format="hls", **stream_params)
#         # loop over
#         while True:
#             frame = stream.read()
#             if frame is None:
#                 break
#             streamer.stream(frame)
#         stream.stop()
#         streamer.terminate()
#     def do_GET(self):
#         regexp = re.compile(r'chunk-stream-[\d]+.ts')
#         if regexp.search(self.path):
#             with open(self.path[1:], 'rb') as f:
#                 self.send_response(200)
#                 self.send_header("Content-Type", 'video/mp2t')
#                 self.send_header('Connection', 'keep-alive')
#                 fs = os.fstat(f.fileno())
#                 self.send_header("Content-Length", str(fs.st_size))
#                 self.end_headers()
#                 shutil.copyfileobj(f, self.wfile)
#         regexp = re.compile(r'iptv\/[\w\d]+\/[\d]{1,5}\/index.m3u')
#         if regexp.search(self.path):
#             self.VideoStream()
#             with open(f"{self.tmp}/hls_out.m3u8", 'rb') as f:
#                 self.send_response(200)
#                 self.send_header("Content-Type", 'application/x-mpegURL')
#                 fs = os.fstat(f.fileno())
#                 self.send_header("Content-Length", str(fs.st_size))
#                 self.end_headers()
#                 shutil.copyfileobj(f, self.wfile)
#
#         # r = requests.get(url=f"http://romaxa55.otttv.pw{self.path}")
#         # with open("tmp/chunk-stream-009.ts", "r+") as file1:
#         #     self.wfile.write(bytes(file1.read()))
#
#
#
# with HTTPServer(('', 8000), handler) as server:
#     server.serve_forever()


